rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() {
      return request.auth != null;
    }
    
    // No one can update, delete, read, or list but everyone can create
    match /messages/{messageId} {
      allow update, delete, read, list: if false;
      allow create: if true;
    }

    // No one can update, delete, read, or list but everyone can create
    match /referrals/{referralId} {
      allow update, delete, read, list: if false;
      allow create: if true;
    }

    // TODO: change these to be updated by admins or that client!
    // No one can update, delete, read, or list but everyone can create
    match /users/{userId} {
      function isTrueUser() {
        return userId == request.auth.uid;
      }
      // Anyone can create a user
      allow create: if true;
      // Only signed in users can read or list user profile data
      allow read, list: if isSignedIn();
      // Only that user can update their profile data
      allow update: if isSignedIn() && isTrueUser();
      // No one can delete a user
      allow delete: if false;
    }


    match /buildings/{buildingId} {
      function isTrueUser() {
        return resource.data.clientId == request.auth.uid;
      }

      function isAdminUser() {
        return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
      }

      // Anyone can create a building
      allow create: if true;
      // Only admins or that building owner can read or list building data
      allow read, list: if isSignedIn() && (isTrueUser() || isAdminUser());
      // Only that user or admins can update building data
      allow update: if isSignedIn() && (isTrueUser() || isAdminUser());
      // Only admins or that building owner may delete buildings
      allow delete: if isTrueUser() || isAdminUser();
    }
  }
}